workflows:
  ios-release:
    name: iOS Release Build
    max_build_duration: 60
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
      vars:
        BUNDLE_ID: "com.velluvom.multibusiness"
      groups:
        - appstore_credentials

    cache:
      cache_paths: []   # üî• Disable cache completely (forces fresh build each time)

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: master
          include: true
          source: true

    scripts:
      - name: Clean and get dependencies
        script: |
          flutter clean
          flutter pub get
          flutter precache --ios

      - name: Ensure iOS minimum deployment target
        script: |
          # Force iOS 14.0 (recommended baseline for plugins like google_maps_flutter_ios)
          sed -i '' 's/platform :ios.*/platform :ios, '\''14.0'\''/g' ios/Podfile
          cat ios/Podfile | grep "platform :ios"

      - name: Check for Generated.xcconfig
        script: |
          ls -la ios/Flutter
          if [ -f ios/Flutter/Generated.xcconfig ]; then
            echo "‚úÖ Generated.xcconfig exists!"
          else
            echo "‚ùå Generated.xcconfig is missing!"
          fi

      - name: Generate iOS project support files (xcconfig + podhelper.rb)
        script: |
          flutter build ios-framework --cocoapods --no-universal

      - name: Install CocoaPods
        script: |
          cd ios
          pod install --repo-update
          cd ..

      - name: Set up keychain and certificates
        script: |
          keychain initialize
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
          keychain add-certificates

      - name: Build and sign with Xcode
        script: |
          xcode-project build-ipa \
            --project ios/Runner.xcodeproj \
            --scheme Runner \
            --archive-path build/Runner.xcarchive \
            --export-options-plist ios/ExportOptions.plist

      - name: Inspect xcarchive for dSYMs
        script: |
          echo "Listing contents of xcarchive..."
          ls -R build/Runner.xcarchive || echo "‚ö†Ô∏è xcarchive not found"

      - name: Export dSYM files
        script: |
          echo "Exporting dSYMs..."
          mkdir -p build/dsyms
          if [ -d "build/Runner.xcarchive/dSYMs" ]; then
            ls -la build/Runner.xcarchive/dSYMs
            cp -R build/Runner.xcarchive/dSYMs/*.dSYM build/dsyms/ || echo "‚ö†Ô∏è No dSYM files found"
          else
            echo "‚ö†Ô∏è No dSYMs directory found in xcarchive"
          fi
          ls -la build/dsyms

      - name: Publish to App Store Connect
        script: |
          app-store-connect publish \
            --path "$(find . -name '*.ipa')" \
            --type IOS \
            --release-type MANUAL

    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/archive/*.xcarchive
      - build/dsyms/*

    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_API_KEY
        key_id: $APP_STORE_CONNECT_KEY_ID
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        # Optional: automatically add testers
        beta_groups:
          - "Internal Testers"
